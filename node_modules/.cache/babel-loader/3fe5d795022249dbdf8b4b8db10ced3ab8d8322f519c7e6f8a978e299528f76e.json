{"ast":null,"code":"import _objectSpread from\"/home/borgg/dataprox/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Button,TextField,Typography,Alert,CircularProgress,Grid,Divider,Stack,List,ListItem,ListItemText,IconButton}from'@mui/material';import axios from'axios';import RefreshIcon from'@mui/icons-material/Refresh';import DeleteIcon from'@mui/icons-material/Delete';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrafficGenerator=()=>{const[formData,setFormData]=useState({// SSH Configuration\nsshHost:'',sshUsername:'',sshPassword:'',sshKeyPath:'',// Traffic Generator Configuration\ninterface:'',moatPrivateIp:'',privateIp:'',nodeIndex:'',totalDuration:''});const[loading,setLoading]=useState(false);const[stopping,setStopping]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[connectionStatus,setConnectionStatus]=useState(null);const[processDetails,setProcessDetails]=useState(null);const[logFiles,setLogFiles]=useState([]);const[selectedLogFile,setSelectedLogFile]=useState(null);const[logContent,setLogContent]=useState('');const[wsConnected,setWsConnected]=useState(false);const[ws,setWs]=useState(null);const[autoRefresh,setAutoRefresh]=useState(false);useEffect(()=>{// Fetch log files when component mounts\nfetchLogFiles();// Set up auto-refresh interval\nconst interval=setInterval(()=>{if(autoRefresh){fetchLogFiles();}},5000);return()=>{clearInterval(interval);if(ws){ws.close();}};},[autoRefresh]);const fetchLogFiles=async()=>{try{const response=await axios.get('/api/traffic-generator/logs');setLogFiles(response.data);}catch(err){console.error('Error fetching log files:',err);}};const handleLogFileSelect=async fileName=>{setSelectedLogFile(fileName);setLogContent('');// Fetch initial log content\ntry{const response=await axios.get(\"/api/logs/\".concat(fileName));setLogContent(response.data.content);}catch(err){console.error('Error fetching log content:',err);}};const handleDeleteLog=async fileName=>{try{await axios.delete(\"/api/traffic-generator/logs/\".concat(fileName));fetchLogFiles();if(selectedLogFile===fileName){setSelectedLogFile(null);setLogContent('');if(ws){ws.close();}}}catch(err){console.error('Error deleting log file:',err);}};const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const testConnection=async()=>{setLoading(true);setError(null);setConnectionStatus(null);try{const response=await axios.post('/api/traffic-generator/test-connection',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});setConnectionStatus('Successfully connected to the traffic generator machine!');}catch(err){setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');console.error('Error:',err);}finally{setLoading(false);}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);setSuccess(null);setProcessDetails(null);try{const response=await axios.post('/api/traffic-generator/run',formData);setSuccess('Traffic generation started successfully!');if(response.data.details){setProcessDetails(response.data.details);}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.details)||'Failed to start traffic generation. Please try again.');console.error('Error:',err);}finally{setLoading(false);}};const handleStop=async()=>{setStopping(true);setError(null);setSuccess(null);try{// First stop the traffic processes\nconst stopResponse=await axios.post('/api/traffic-generator/stop',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});// Then cleanup the tail process if we have a PID\nif(processDetails!==null&&processDetails!==void 0&&processDetails.pid){await axios.post('/api/traffic-generator/cleanup',{pid:processDetails.pid,sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});}setSuccess('Traffic processes stopped successfully!');setProcessDetails(null);}catch(err){setError('Failed to stop traffic processes. Please try again.');console.error('Error:',err);}finally{setStopping(false);}};return/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{maxWidth:800,mx:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Traffic Generator Configuration\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:success}),connectionStatus&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:connectionStatus}),processDetails&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Process Details\"}),processDetails.stdout&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.stdout})]}),processDetails.stderr&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Errors:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap',color:'error.main'},children:processDetails.stderr})]}),processDetails.processStatus&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Process Status:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.processStatus})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:3,mb:2},children:\"SSH Connection\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Host\",name:\"sshHost\",value:formData.sshHost,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Username\",name:\"sshUsername\",value:formData.sshUsername,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Password\",name:\"sshPassword\",type:\"password\",value:formData.sshPassword,onChange:handleInputChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Key Path (optional)\",name:\"sshKeyPath\",value:formData.sshKeyPath,onChange:handleInputChange,helperText:\"Path to private key file if using key-based authentication\"})})]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:testConnection,disabled:loading||stopping,sx:{mt:2},children:\"Test Connection\"}),/*#__PURE__*/_jsx(Divider,{sx:{my:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Traffic Generator Settings\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Network Interface\",name:\"interface\",value:formData.interface,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"MOAT Private IP\",name:\"moatPrivateIp\",value:formData.moatPrivateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Private IP\",name:\"privateIp\",value:formData.privateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Node Index\",name:\"nodeIndex\",type:\"number\",value:formData.nodeIndex,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Total Duration (seconds)\",name:\"totalDuration\",type:\"number\",value:formData.totalDuration,onChange:handleInputChange,required:true})})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,sx:{mt:3},children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,disabled:loading||stopping,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Start Traffic Generation'}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",fullWidth:true,onClick:handleStop,disabled:loading||stopping,children:stopping?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Stop Traffic'})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:4}}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Log Files\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(RefreshIcon,{}),onClick:fetchLogFiles,disabled:loading,children:\"Refresh\"}),/*#__PURE__*/_jsx(Button,{variant:autoRefresh?'contained':'outlined',onClick:()=>setAutoRefresh(!autoRefresh),sx:{ml:1},children:\"Auto Refresh\"})]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsx(List,{sx:{bgcolor:'background.paper',borderRadius:1},children:logFiles.map(file=>/*#__PURE__*/_jsx(ListItem,{secondaryAction:/*#__PURE__*/_jsx(IconButton,{edge:\"end\",\"aria-label\":\"delete\",onClick:()=>handleDeleteLog(file.name),children:/*#__PURE__*/_jsx(DeleteIcon,{})}),selected:selectedLogFile===file.name,onClick:()=>handleLogFileSelect(file.name),sx:{cursor:'pointer','&:hover':{bgcolor:'action.hover'}},children:/*#__PURE__*/_jsx(ListItemText,{primary:file.name,secondary:\"\".concat((file.size/1024).toFixed(2),\" KB - \").concat(new Date(file.lastModified).toLocaleString())})},file.name))})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(Box,{sx:{bgcolor:'background.paper',borderRadius:1,p:2,height:'400px',overflow:'auto'},children:selectedLogFile?/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:logContent||'Loading log content...'}):/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",sx:{textAlign:'center',mt:2},children:\"Select a log file to view its contents\"})})})]})]});};export default TrafficGenerator;","map":{"version":3,"names":["React","useState","useEffect","Box","Button","TextField","Typography","Alert","CircularProgress","Grid","Divider","Stack","List","ListItem","ListItemText","IconButton","axios","RefreshIcon","DeleteIcon","jsx","_jsx","jsxs","_jsxs","TrafficGenerator","formData","setFormData","sshHost","sshUsername","sshPassword","sshKeyPath","interface","moatPrivateIp","privateIp","nodeIndex","totalDuration","loading","setLoading","stopping","setStopping","error","setError","success","setSuccess","connectionStatus","setConnectionStatus","processDetails","setProcessDetails","logFiles","setLogFiles","selectedLogFile","setSelectedLogFile","logContent","setLogContent","wsConnected","setWsConnected","ws","setWs","autoRefresh","setAutoRefresh","fetchLogFiles","interval","setInterval","clearInterval","close","response","get","data","err","console","handleLogFileSelect","fileName","concat","content","handleDeleteLog","delete","handleInputChange","e","name","value","target","prev","_objectSpread","testConnection","post","handleSubmit","preventDefault","details","_err$response","_err$response$data","handleStop","stopResponse","pid","component","onSubmit","sx","maxWidth","mx","children","variant","gutterBottom","severity","mb","p","bgcolor","borderRadius","stdout","color","style","margin","whiteSpace","stderr","processStatus","mt","container","spacing","item","xs","sm","fullWidth","label","onChange","required","type","helperText","onClick","disabled","my","direction","size","display","justifyContent","alignItems","startIcon","ml","md","map","file","secondaryAction","edge","selected","cursor","primary","secondary","toFixed","Date","lastModified","toLocaleString","height","overflow","textAlign"],"sources":["/home/borgg/dataprox/src/components/TrafficGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Alert,\n  CircularProgress,\n  Grid,\n  Divider,\n  Stack,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n} from '@mui/material';\nimport axios from 'axios';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ninterface TrafficGeneratorProps {}\n\ninterface ProcessDetails {\n  stdout: string;\n  stderr: string;\n  processStatus: string;\n  pid: string;\n  processStatusAfter5s: string;\n}\n\ninterface LogFile {\n  name: string;\n  size: number;\n  lastModified: string;\n}\n\nconst TrafficGenerator: React.FC<TrafficGeneratorProps> = () => {\n  const [formData, setFormData] = useState({\n    // SSH Configuration\n    sshHost: '',\n    sshUsername: '',\n    sshPassword: '',\n    sshKeyPath: '',\n    // Traffic Generator Configuration\n    interface: '',\n    moatPrivateIp: '',\n    privateIp: '',\n    nodeIndex: '',\n    totalDuration: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [stopping, setStopping] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string | null>(null);\n  const [processDetails, setProcessDetails] = useState<ProcessDetails | null>(null);\n  const [logFiles, setLogFiles] = useState<LogFile[]>([]);\n  const [selectedLogFile, setSelectedLogFile] = useState<string | null>(null);\n  const [logContent, setLogContent] = useState<string>('');\n  const [wsConnected, setWsConnected] = useState(false);\n  const [ws, setWs] = useState<WebSocket | null>(null);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n\n  useEffect(() => {\n    // Fetch log files when component mounts\n    fetchLogFiles();\n\n    // Set up auto-refresh interval\n    const interval = setInterval(() => {\n      if (autoRefresh) {\n        fetchLogFiles();\n      }\n    }, 5000);\n\n    return () => {\n      clearInterval(interval);\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [autoRefresh]);\n\n  const fetchLogFiles = async () => {\n    try {\n      const response = await axios.get('/api/traffic-generator/logs');\n      setLogFiles(response.data);\n    } catch (err) {\n      console.error('Error fetching log files:', err);\n    }\n  };\n\n  const handleLogFileSelect = async (fileName: string) => {\n    setSelectedLogFile(fileName);\n    setLogContent('');\n\n    // Fetch initial log content\n    try {\n      const response = await axios.get(`/api/logs/${fileName}`);\n      setLogContent(response.data.content);\n    } catch (err) {\n      console.error('Error fetching log content:', err);\n    }\n  };\n\n  const handleDeleteLog = async (fileName: string) => {\n    try {\n      await axios.delete(`/api/traffic-generator/logs/${fileName}`);\n      fetchLogFiles();\n      if (selectedLogFile === fileName) {\n        setSelectedLogFile(null);\n        setLogContent('');\n        if (ws) {\n          ws.close();\n        }\n      }\n    } catch (err) {\n      console.error('Error deleting log file:', err);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const testConnection = async () => {\n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/test-connection', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n      setConnectionStatus('Successfully connected to the traffic generator machine!');\n    } catch (err) {\n      setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    setProcessDetails(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/run', formData);\n      setSuccess('Traffic generation started successfully!');\n      if (response.data.details) {\n        setProcessDetails(response.data.details);\n      }\n    } catch (err: any) {\n      setError(err.response?.data?.details || 'Failed to start traffic generation. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStop = async () => {\n    setStopping(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // First stop the traffic processes\n      const stopResponse = await axios.post('/api/traffic-generator/stop', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n\n      // Then cleanup the tail process if we have a PID\n      if (processDetails?.pid) {\n        await axios.post('/api/traffic-generator/cleanup', {\n          pid: processDetails.pid,\n          sshHost: formData.sshHost,\n          sshUsername: formData.sshUsername,\n          sshPassword: formData.sshPassword,\n          sshKeyPath: formData.sshKeyPath,\n        });\n      }\n\n      setSuccess('Traffic processes stopped successfully!');\n      setProcessDetails(null);\n    } catch (err) {\n      setError('Failed to stop traffic processes. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setStopping(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Traffic Generator Configuration\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {success}\n        </Alert>\n      )}\n\n      {connectionStatus && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {connectionStatus}\n        </Alert>\n      )}\n\n      {processDetails && (\n        <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Process Details\n          </Typography>\n          {processDetails.stdout && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Output:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.stdout}\n              </pre>\n            </Box>\n          )}\n          {processDetails.stderr && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Errors:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap', color: 'error.main' }}>\n                {processDetails.stderr}\n              </pre>\n            </Box>\n          )}\n          {processDetails.processStatus && (\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Process Status:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.processStatus}\n              </pre>\n            </Box>\n          )}\n        </Box>\n      )}\n\n      <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\n        SSH Connection\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Host\"\n            name=\"sshHost\"\n            value={formData.sshHost}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Username\"\n            name=\"sshUsername\"\n            value={formData.sshUsername}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Password\"\n            name=\"sshPassword\"\n            type=\"password\"\n            value={formData.sshPassword}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Key Path (optional)\"\n            name=\"sshKeyPath\"\n            value={formData.sshKeyPath}\n            onChange={handleInputChange}\n            helperText=\"Path to private key file if using key-based authentication\"\n          />\n        </Grid>\n      </Grid>\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={testConnection}\n        disabled={loading || stopping}\n        sx={{ mt: 2 }}\n      >\n        Test Connection\n      </Button>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Traffic Generator Settings\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Network Interface\"\n            name=\"interface\"\n            value={formData.interface}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"MOAT Private IP\"\n            name=\"moatPrivateIp\"\n            value={formData.moatPrivateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Private IP\"\n            name=\"privateIp\"\n            value={formData.privateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Node Index\"\n            name=\"nodeIndex\"\n            type=\"number\"\n            value={formData.nodeIndex}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Total Duration (seconds)\"\n            name=\"totalDuration\"\n            type=\"number\"\n            value={formData.totalDuration}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n      </Grid>\n\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          disabled={loading || stopping}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Start Traffic Generation'}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          fullWidth\n          onClick={handleStop}\n          disabled={loading || stopping}\n        >\n          {stopping ? <CircularProgress size={24} /> : 'Stop Traffic'}\n        </Button>\n      </Stack>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">\n          Log Files\n        </Typography>\n        <Box>\n          <Button\n            startIcon={<RefreshIcon />}\n            onClick={fetchLogFiles}\n            disabled={loading}\n          >\n            Refresh\n          </Button>\n          <Button\n            variant={autoRefresh ? 'contained' : 'outlined'}\n            onClick={() => setAutoRefresh(!autoRefresh)}\n            sx={{ ml: 1 }}\n          >\n            Auto Refresh\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <List sx={{ bgcolor: 'background.paper', borderRadius: 1 }}>\n            {logFiles.map((file) => (\n              <ListItem\n                key={file.name}\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => handleDeleteLog(file.name)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                }\n                selected={selectedLogFile === file.name}\n                onClick={() => handleLogFileSelect(file.name)}\n                sx={{\n                  cursor: 'pointer',\n                  '&:hover': {\n                    bgcolor: 'action.hover',\n                  },\n                }}\n              >\n                <ListItemText\n                  primary={file.name}\n                  secondary={`${(file.size / 1024).toFixed(2)} KB - ${new Date(file.lastModified).toLocaleString()}`}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Box\n            sx={{\n              bgcolor: 'background.paper',\n              borderRadius: 1,\n              p: 2,\n              height: '400px',\n              overflow: 'auto',\n            }}\n          >\n            {selectedLogFile ? (\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {logContent || 'Loading log content...'}\n              </pre>\n            ) : (\n              <Typography color=\"text.secondary\" sx={{ textAlign: 'center', mt: 2 }}>\n                Select a log file to view its contents\n              </Typography>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TrafficGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}