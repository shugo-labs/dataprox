{"ast":null,"code":"import _objectSpread from\"/home/borgg/dataprox/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Box,Button,TextField,Typography,Alert,CircularProgress,Grid,Divider,Stack}from'@mui/material';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrafficGenerator=()=>{const[formData,setFormData]=useState({// SSH Configuration\nsshHost:'',sshUsername:'',sshPassword:'',sshKeyPath:'',// Traffic Generator Configuration\ninterface:'',moatPrivateIp:'',privateIp:'',nodeIndex:'',totalDuration:''});const[loading,setLoading]=useState(false);const[stopping,setStopping]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[connectionStatus,setConnectionStatus]=useState(null);const[processDetails,setProcessDetails]=useState(null);const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const testConnection=async()=>{setLoading(true);setError(null);setConnectionStatus(null);try{const response=await axios.post('/api/traffic-generator/test-connection',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});setConnectionStatus('Successfully connected to the traffic generator machine!');}catch(err){setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');console.error('Error:',err);}finally{setLoading(false);}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);setSuccess(null);setProcessDetails(null);try{const response=await axios.post('/api/traffic-generator/run',formData);setSuccess('Traffic generation started successfully!');if(response.data.details){setProcessDetails(response.data.details);}}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.details)||'Failed to start traffic generation. Please try again.');console.error('Error:',err);}finally{setLoading(false);}};const handleStop=async()=>{setStopping(true);setError(null);setSuccess(null);try{// First stop the traffic processes\nconst stopResponse=await axios.post('/api/traffic-generator/stop',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});// Then cleanup the tail process if we have a PID\nif(processDetails!==null&&processDetails!==void 0&&processDetails.pid){await axios.post('/api/traffic-generator/cleanup',{pid:processDetails.pid,sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});}setSuccess('Traffic processes stopped successfully!');setProcessDetails(null);}catch(err){setError('Failed to stop traffic processes. Please try again.');console.error('Error:',err);}finally{setStopping(false);}};return/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{maxWidth:800,mx:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Traffic Generator Configuration\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:success}),connectionStatus&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:connectionStatus}),processDetails&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Process Details\"}),processDetails.stdout&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.stdout})]}),processDetails.stderr&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Errors:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap',color:'error.main'},children:processDetails.stderr})]}),processDetails.processStatus&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Process Status:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.processStatus})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:3,mb:2},children:\"SSH Connection\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Host\",name:\"sshHost\",value:formData.sshHost,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Username\",name:\"sshUsername\",value:formData.sshUsername,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Password\",name:\"sshPassword\",type:\"password\",value:formData.sshPassword,onChange:handleInputChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Key Path (optional)\",name:\"sshKeyPath\",value:formData.sshKeyPath,onChange:handleInputChange,helperText:\"Path to private key file if using key-based authentication\"})})]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:testConnection,disabled:loading||stopping,sx:{mt:2},children:\"Test Connection\"}),/*#__PURE__*/_jsx(Divider,{sx:{my:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Traffic Generator Settings\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Network Interface\",name:\"interface\",value:formData.interface,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"MOAT Private IP\",name:\"moatPrivateIp\",value:formData.moatPrivateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Private IP\",name:\"privateIp\",value:formData.privateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Node Index\",name:\"nodeIndex\",type:\"number\",value:formData.nodeIndex,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Total Duration (seconds)\",name:\"totalDuration\",type:\"number\",value:formData.totalDuration,onChange:handleInputChange,required:true})})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,sx:{mt:3},children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,disabled:loading||stopping,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Start Traffic Generation'}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",fullWidth:true,onClick:handleStop,disabled:loading||stopping,children:stopping?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Stop Traffic'})]})]});};export default TrafficGenerator;","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Alert","CircularProgress","Grid","Divider","Stack","axios","jsx","_jsx","jsxs","_jsxs","TrafficGenerator","formData","setFormData","sshHost","sshUsername","sshPassword","sshKeyPath","interface","moatPrivateIp","privateIp","nodeIndex","totalDuration","loading","setLoading","stopping","setStopping","error","setError","success","setSuccess","connectionStatus","setConnectionStatus","processDetails","setProcessDetails","handleInputChange","e","name","value","target","prev","_objectSpread","testConnection","response","post","err","console","handleSubmit","preventDefault","data","details","_err$response","_err$response$data","handleStop","stopResponse","pid","component","onSubmit","sx","maxWidth","mx","children","variant","gutterBottom","severity","mb","p","bgcolor","borderRadius","stdout","color","style","margin","whiteSpace","stderr","processStatus","mt","container","spacing","item","xs","sm","fullWidth","label","onChange","required","type","helperText","onClick","disabled","my","direction","size"],"sources":["/home/borgg/dataprox/src/components/TrafficGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Alert,\n  CircularProgress,\n  Grid,\n  Divider,\n  Stack,\n} from '@mui/material';\nimport axios from 'axios';\n\ninterface TrafficGeneratorProps {}\n\ninterface ProcessDetails {\n  stdout: string;\n  stderr: string;\n  processStatus: string;\n  pid: string;\n  processStatusAfter5s: string;\n}\n\nconst TrafficGenerator: React.FC<TrafficGeneratorProps> = () => {\n  const [formData, setFormData] = useState({\n    // SSH Configuration\n    sshHost: '',\n    sshUsername: '',\n    sshPassword: '',\n    sshKeyPath: '',\n    // Traffic Generator Configuration\n    interface: '',\n    moatPrivateIp: '',\n    privateIp: '',\n    nodeIndex: '',\n    totalDuration: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [stopping, setStopping] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string | null>(null);\n  const [processDetails, setProcessDetails] = useState<ProcessDetails | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const testConnection = async () => {\n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/test-connection', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n      setConnectionStatus('Successfully connected to the traffic generator machine!');\n    } catch (err) {\n      setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    setProcessDetails(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/run', formData);\n      setSuccess('Traffic generation started successfully!');\n      if (response.data.details) {\n        setProcessDetails(response.data.details);\n      }\n    } catch (err: any) {\n      setError(err.response?.data?.details || 'Failed to start traffic generation. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStop = async () => {\n    setStopping(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // First stop the traffic processes\n      const stopResponse = await axios.post('/api/traffic-generator/stop', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n\n      // Then cleanup the tail process if we have a PID\n      if (processDetails?.pid) {\n        await axios.post('/api/traffic-generator/cleanup', {\n          pid: processDetails.pid,\n          sshHost: formData.sshHost,\n          sshUsername: formData.sshUsername,\n          sshPassword: formData.sshPassword,\n          sshKeyPath: formData.sshKeyPath,\n        });\n      }\n\n      setSuccess('Traffic processes stopped successfully!');\n      setProcessDetails(null);\n    } catch (err) {\n      setError('Failed to stop traffic processes. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setStopping(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Traffic Generator Configuration\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {success}\n        </Alert>\n      )}\n\n      {connectionStatus && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {connectionStatus}\n        </Alert>\n      )}\n\n      {processDetails && (\n        <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Process Details\n          </Typography>\n          {processDetails.stdout && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Output:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.stdout}\n              </pre>\n            </Box>\n          )}\n          {processDetails.stderr && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Errors:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap', color: 'error.main' }}>\n                {processDetails.stderr}\n              </pre>\n            </Box>\n          )}\n          {processDetails.processStatus && (\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Process Status:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.processStatus}\n              </pre>\n            </Box>\n          )}\n        </Box>\n      )}\n\n      <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\n        SSH Connection\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Host\"\n            name=\"sshHost\"\n            value={formData.sshHost}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Username\"\n            name=\"sshUsername\"\n            value={formData.sshUsername}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Password\"\n            name=\"sshPassword\"\n            type=\"password\"\n            value={formData.sshPassword}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Key Path (optional)\"\n            name=\"sshKeyPath\"\n            value={formData.sshKeyPath}\n            onChange={handleInputChange}\n            helperText=\"Path to private key file if using key-based authentication\"\n          />\n        </Grid>\n      </Grid>\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={testConnection}\n        disabled={loading || stopping}\n        sx={{ mt: 2 }}\n      >\n        Test Connection\n      </Button>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Traffic Generator Settings\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Network Interface\"\n            name=\"interface\"\n            value={formData.interface}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"MOAT Private IP\"\n            name=\"moatPrivateIp\"\n            value={formData.moatPrivateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Private IP\"\n            name=\"privateIp\"\n            value={formData.privateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Node Index\"\n            name=\"nodeIndex\"\n            type=\"number\"\n            value={formData.nodeIndex}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Total Duration (seconds)\"\n            name=\"totalDuration\"\n            type=\"number\"\n            value={formData.totalDuration}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n      </Grid>\n\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          disabled={loading || stopping}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Start Traffic Generation'}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          fullWidth\n          onClick={handleStop}\n          disabled={loading || stopping}\n        >\n          {stopping ? <CircularProgress size={24} /> : 'Stop Traffic'}\n        </Button>\n      </Stack>\n    </Box>\n  );\n};\n\nexport default TrafficGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}