{"ast":null,"code":"import _objectSpread from\"/home/borgg/dataprox/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Box,Button,TextField,Typography,Alert,CircularProgress,Grid,Divider,Stack,Paper,List,ListItem,ListItemText,IconButton}from'@mui/material';import RefreshIcon from'@mui/icons-material/Refresh';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TrafficGenerator=()=>{const[formData,setFormData]=useState({// SSH Configuration\nsshHost:'',sshUsername:'',sshPassword:'',sshKeyPath:'',// Traffic Generator Configuration\ninterface:'',moatPrivateIp:'',privateIp:'',nodeIndex:'',totalDuration:''});const[loading,setLoading]=useState(false);const[stopping,setStopping]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[connectionStatus,setConnectionStatus]=useState(null);const[processDetails,setProcessDetails]=useState(null);const[logFiles,setLogFiles]=useState([]);const[selectedLog,setSelectedLog]=useState(null);const[logContent,setLogContent]=useState('');const[autoRefresh,setAutoRefresh]=useState(false);const refreshInterval=1000;// 1 second\nconst fetchLogFiles=async()=>{try{const response=await axios.get('/api/logs');setLogFiles(response.data);}catch(err){console.error('Failed to fetch log files:',err);}};const fetchLogContent=async path=>{try{const response=await axios.get(path);setLogContent(response.data.content);}catch(err){console.error('Failed to fetch log content:',err);}};useEffect(()=>{fetchLogFiles();},[]);useEffect(()=>{let intervalId;if(autoRefresh&&selectedLog){intervalId=setInterval(()=>{fetchLogContent(selectedLog);},refreshInterval);}return()=>{if(intervalId){clearInterval(intervalId);}};},[autoRefresh,selectedLog]);const handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const testConnection=async()=>{setLoading(true);setError(null);setConnectionStatus(null);try{const response=await axios.post('/api/traffic-generator/test-connection',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});setConnectionStatus('Successfully connected to the traffic generator machine!');}catch(err){setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');console.error('Error:',err);}finally{setLoading(false);}};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);setSuccess(null);setProcessDetails(null);setAutoRefresh(true);try{const response=await axios.post('/api/traffic-generator/run',formData);setSuccess('Traffic generation started successfully!');if(response.data.details){setProcessDetails(response.data.details);setSelectedLog(response.data.details.logFile);fetchLogContent(response.data.details.logFile);}fetchLogFiles();}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.details)||'Failed to start traffic generation. Please try again.');setAutoRefresh(false);console.error('Error:',err);}finally{setLoading(false);}};const handleStop=async()=>{setStopping(true);setError(null);setSuccess(null);try{const response=await axios.post('/api/traffic-generator/stop',{sshHost:formData.sshHost,sshUsername:formData.sshUsername,sshPassword:formData.sshPassword,sshKeyPath:formData.sshKeyPath});setSuccess('Traffic processes stopped successfully!');}catch(err){setError('Failed to stop traffic processes. Please try again.');console.error('Error:',err);}finally{setStopping(false);}};return/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{maxWidth:800,mx:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Traffic Generator Configuration\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),success&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:success}),connectionStatus&&/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:2},children:connectionStatus}),processDetails&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2,p:2,bgcolor:'background.paper',borderRadius:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Process Details\"}),processDetails.stdout&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.stdout})]}),processDetails.stderr&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Errors:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap',color:'error.main'},children:processDetails.stderr})]}),processDetails.processStatus&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",color:\"text.secondary\",children:\"Process Status:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:processDetails.processStatus})]})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mt:3,mb:2},children:\"SSH Connection\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Host\",name:\"sshHost\",value:formData.sshHost,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Username\",name:\"sshUsername\",value:formData.sshUsername,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Password\",name:\"sshPassword\",type:\"password\",value:formData.sshPassword,onChange:handleInputChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"SSH Key Path (optional)\",name:\"sshKeyPath\",value:formData.sshKeyPath,onChange:handleInputChange,helperText:\"Path to private key file if using key-based authentication\"})})]}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",onClick:testConnection,disabled:loading||stopping,sx:{mt:2},children:\"Test Connection\"}),/*#__PURE__*/_jsx(Divider,{sx:{my:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Traffic Generator Settings\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Network Interface\",name:\"interface\",value:formData.interface,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"MOAT Private IP\",name:\"moatPrivateIp\",value:formData.moatPrivateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Private IP\",name:\"privateIp\",value:formData.privateIp,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Node Index\",name:\"nodeIndex\",type:\"number\",value:formData.nodeIndex,onChange:handleInputChange,required:true})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Total Duration (seconds)\",name:\"totalDuration\",type:\"number\",value:formData.totalDuration,onChange:handleInputChange,required:true})})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:2,sx:{mt:3},children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",fullWidth:true,disabled:loading||stopping,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Start Traffic Generation'}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"error\",fullWidth:true,onClick:handleStop,disabled:loading||stopping,children:stopping?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Stop Traffic'})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:4}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{mb:2},children:\"Log Files\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,maxHeight:400,overflow:'auto'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Available Logs\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:fetchLogFiles,size:\"small\",sx:{mr:1},children:/*#__PURE__*/_jsx(RefreshIcon,{})}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:autoRefresh?\"contained\":\"outlined\",onClick:()=>setAutoRefresh(!autoRefresh),children:autoRefresh?\"Stop Auto-refresh\":\"Start Auto-refresh\"})]})]}),/*#__PURE__*/_jsx(List,{children:logFiles.map(file=>/*#__PURE__*/_jsx(ListItem,{button:true,selected:selectedLog===file.path,onClick:()=>{setSelectedLog(file.path);fetchLogContent(file.path);},children:/*#__PURE__*/_jsx(ListItemText,{primary:file.name,secondary:\"\".concat(new Date(file.created).toLocaleString(),\" - \").concat((file.size/1024).toFixed(1),\" KB\")})},file.name))})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsxs(Paper,{sx:{p:2,maxHeight:400,overflow:'auto'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",gutterBottom:true,children:[\"Log Content \",autoRefresh&&\"(Auto-refreshing...)\"]}),/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,whiteSpace:'pre-wrap'},children:logContent||'Select a log file to view its contents'})]})})]})]});};export default TrafficGenerator;","map":{"version":3,"names":["React","useState","useEffect","Box","Button","TextField","Typography","Alert","CircularProgress","Grid","Divider","Stack","Paper","List","ListItem","ListItemText","IconButton","RefreshIcon","axios","jsx","_jsx","jsxs","_jsxs","TrafficGenerator","formData","setFormData","sshHost","sshUsername","sshPassword","sshKeyPath","interface","moatPrivateIp","privateIp","nodeIndex","totalDuration","loading","setLoading","stopping","setStopping","error","setError","success","setSuccess","connectionStatus","setConnectionStatus","processDetails","setProcessDetails","logFiles","setLogFiles","selectedLog","setSelectedLog","logContent","setLogContent","autoRefresh","setAutoRefresh","refreshInterval","fetchLogFiles","response","get","data","err","console","fetchLogContent","path","content","intervalId","setInterval","clearInterval","handleInputChange","e","name","value","target","prev","_objectSpread","testConnection","post","handleSubmit","preventDefault","details","logFile","_err$response","_err$response$data","handleStop","component","onSubmit","sx","maxWidth","mx","children","variant","gutterBottom","severity","mb","p","bgcolor","borderRadius","stdout","color","style","margin","whiteSpace","stderr","processStatus","mt","container","spacing","item","xs","sm","fullWidth","label","onChange","required","type","helperText","onClick","disabled","my","direction","size","md","maxHeight","overflow","display","justifyContent","alignItems","mr","map","file","button","selected","primary","secondary","concat","Date","created","toLocaleString","toFixed"],"sources":["/home/borgg/dataprox/src/components/TrafficGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Alert,\n  CircularProgress,\n  Grid,\n  Divider,\n  Stack,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport axios from 'axios';\n\ninterface TrafficGeneratorProps {}\n\ninterface ProcessDetails {\n  stdout: string;\n  stderr: string;\n  processStatus: string;\n  logContent: string;\n  pid: string;\n  processStatusAfter5s: string;\n  logFile: string;\n}\n\ninterface LogFile {\n  name: string;\n  path: string;\n  size: number;\n  created: string;\n}\n\nconst TrafficGenerator: React.FC<TrafficGeneratorProps> = () => {\n  const [formData, setFormData] = useState({\n    // SSH Configuration\n    sshHost: '',\n    sshUsername: '',\n    sshPassword: '',\n    sshKeyPath: '',\n    // Traffic Generator Configuration\n    interface: '',\n    moatPrivateIp: '',\n    privateIp: '',\n    nodeIndex: '',\n    totalDuration: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [stopping, setStopping] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string | null>(null);\n  const [processDetails, setProcessDetails] = useState<ProcessDetails | null>(null);\n  const [logFiles, setLogFiles] = useState<LogFile[]>([]);\n  const [selectedLog, setSelectedLog] = useState<string | null>(null);\n  const [logContent, setLogContent] = useState<string>('');\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  const refreshInterval = 1000; // 1 second\n\n  const fetchLogFiles = async () => {\n    try {\n      const response = await axios.get('/api/logs');\n      setLogFiles(response.data);\n    } catch (err) {\n      console.error('Failed to fetch log files:', err);\n    }\n  };\n\n  const fetchLogContent = async (path: string) => {\n    try {\n      const response = await axios.get(path);\n      setLogContent(response.data.content);\n    } catch (err) {\n      console.error('Failed to fetch log content:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchLogFiles();\n  }, []);\n\n  useEffect(() => {\n    let intervalId: NodeJS.Timeout;\n    \n    if (autoRefresh && selectedLog) {\n      intervalId = setInterval(() => {\n        fetchLogContent(selectedLog);\n      }, refreshInterval);\n    }\n    \n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [autoRefresh, selectedLog]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const testConnection = async () => {\n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/test-connection', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n      setConnectionStatus('Successfully connected to the traffic generator machine!');\n    } catch (err) {\n      setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    setProcessDetails(null);\n    setAutoRefresh(true);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/run', formData);\n      setSuccess('Traffic generation started successfully!');\n      if (response.data.details) {\n        setProcessDetails(response.data.details);\n        setSelectedLog(response.data.details.logFile);\n        fetchLogContent(response.data.details.logFile);\n      }\n      fetchLogFiles();\n    } catch (err: any) {\n      setError(err.response?.data?.details || 'Failed to start traffic generation. Please try again.');\n      setAutoRefresh(false);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStop = async () => {\n    setStopping(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/stop', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n      setSuccess('Traffic processes stopped successfully!');\n    } catch (err) {\n      setError('Failed to stop traffic processes. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setStopping(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Traffic Generator Configuration\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {success}\n        </Alert>\n      )}\n\n      {connectionStatus && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {connectionStatus}\n        </Alert>\n      )}\n\n      {processDetails && (\n        <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Process Details\n          </Typography>\n          {processDetails.stdout && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Output:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.stdout}\n              </pre>\n            </Box>\n          )}\n          {processDetails.stderr && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Errors:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap', color: 'error.main' }}>\n                {processDetails.stderr}\n              </pre>\n            </Box>\n          )}\n          {processDetails.processStatus && (\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Process Status:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.processStatus}\n              </pre>\n            </Box>\n          )}\n        </Box>\n      )}\n\n      <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\n        SSH Connection\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Host\"\n            name=\"sshHost\"\n            value={formData.sshHost}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Username\"\n            name=\"sshUsername\"\n            value={formData.sshUsername}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Password\"\n            name=\"sshPassword\"\n            type=\"password\"\n            value={formData.sshPassword}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Key Path (optional)\"\n            name=\"sshKeyPath\"\n            value={formData.sshKeyPath}\n            onChange={handleInputChange}\n            helperText=\"Path to private key file if using key-based authentication\"\n          />\n        </Grid>\n      </Grid>\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={testConnection}\n        disabled={loading || stopping}\n        sx={{ mt: 2 }}\n      >\n        Test Connection\n      </Button>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Traffic Generator Settings\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Network Interface\"\n            name=\"interface\"\n            value={formData.interface}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"MOAT Private IP\"\n            name=\"moatPrivateIp\"\n            value={formData.moatPrivateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Private IP\"\n            name=\"privateIp\"\n            value={formData.privateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Node Index\"\n            name=\"nodeIndex\"\n            type=\"number\"\n            value={formData.nodeIndex}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Total Duration (seconds)\"\n            name=\"totalDuration\"\n            type=\"number\"\n            value={formData.totalDuration}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n      </Grid>\n\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          disabled={loading || stopping}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Start Traffic Generation'}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          fullWidth\n          onClick={handleStop}\n          disabled={loading || stopping}\n        >\n          {stopping ? <CircularProgress size={24} /> : 'Stop Traffic'}\n        </Button>\n      </Stack>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Log Files\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2, maxHeight: 400, overflow: 'auto' }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"subtitle1\">Available Logs</Typography>\n              <Box>\n                <IconButton onClick={fetchLogFiles} size=\"small\" sx={{ mr: 1 }}>\n                  <RefreshIcon />\n                </IconButton>\n                <Button\n                  size=\"small\"\n                  variant={autoRefresh ? \"contained\" : \"outlined\"}\n                  onClick={() => setAutoRefresh(!autoRefresh)}\n                >\n                  {autoRefresh ? \"Stop Auto-refresh\" : \"Start Auto-refresh\"}\n                </Button>\n              </Box>\n            </Box>\n            <List>\n              {logFiles.map((file) => (\n                <ListItem\n                  key={file.name}\n                  button\n                  selected={selectedLog === file.path}\n                  onClick={() => {\n                    setSelectedLog(file.path);\n                    fetchLogContent(file.path);\n                  }}\n                >\n                  <ListItemText\n                    primary={file.name}\n                    secondary={`${new Date(file.created).toLocaleString()} - ${(file.size / 1024).toFixed(1)} KB`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 2, maxHeight: 400, overflow: 'auto' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Log Content {autoRefresh && \"(Auto-refreshing...)\"}\n            </Typography>\n            <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n              {logContent || 'Select a log file to view its contents'}\n            </pre>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TrafficGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}