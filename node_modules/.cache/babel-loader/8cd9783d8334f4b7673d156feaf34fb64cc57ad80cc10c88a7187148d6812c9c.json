{"ast":null,"code":"var _jsxFileName = \"/home/borgg/dataprox/src/components/TrafficGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, TextField, Typography, Alert, CircularProgress, Grid, Divider, Stack, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport axios from 'axios';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrafficGenerator = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    // SSH Configuration\n    sshHost: '',\n    sshUsername: '',\n    sshPassword: '',\n    sshKeyPath: '',\n    // Traffic Generator Configuration\n    interface: '',\n    moatPrivateIp: '',\n    privateIp: '',\n    nodeIndex: '',\n    totalDuration: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [stopping, setStopping] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  const [processDetails, setProcessDetails] = useState(null);\n  const [logFiles, setLogFiles] = useState([]);\n  const [selectedLogFile, setSelectedLogFile] = useState(null);\n  const [logContent, setLogContent] = useState('');\n  const [wsConnected, setWsConnected] = useState(false);\n  const [ws, setWs] = useState(null);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n  useEffect(() => {\n    // Fetch log files when component mounts\n    fetchLogFiles();\n\n    // Set up auto-refresh interval\n    const interval = setInterval(() => {\n      if (autoRefresh) {\n        fetchLogFiles();\n      }\n    }, 5000);\n    return () => {\n      clearInterval(interval);\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [autoRefresh]);\n  const fetchLogFiles = async () => {\n    try {\n      const response = await axios.get('/api/traffic-generator/logs');\n      setLogFiles(response.data);\n    } catch (err) {\n      console.error('Error fetching log files:', err);\n    }\n  };\n  const handleLogFileSelect = async fileName => {\n    setSelectedLogFile(fileName);\n    setLogContent('');\n\n    // Fetch initial log content\n    try {\n      const response = await axios.get(`/api/logs/${fileName}`);\n      setLogContent(response.data.content);\n    } catch (err) {\n      console.error('Error fetching log content:', err);\n    }\n  };\n  const handleDeleteLog = async fileName => {\n    try {\n      await axios.delete(`/api/traffic-generator/logs/${fileName}`);\n      fetchLogFiles();\n      if (selectedLogFile === fileName) {\n        setSelectedLogFile(null);\n        setLogContent('');\n        if (ws) {\n          ws.close();\n        }\n      }\n    } catch (err) {\n      console.error('Error deleting log file:', err);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const testConnection = async () => {\n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n    try {\n      const response = await axios.post('/api/traffic-generator/test-connection', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath\n      });\n      setConnectionStatus('Successfully connected to the traffic generator machine!');\n    } catch (err) {\n      setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    setProcessDetails(null);\n    try {\n      const response = await axios.post('/api/traffic-generator/run', formData);\n      setSuccess('Traffic generation started successfully!');\n      if (response.data.details) {\n        setProcessDetails(response.data.details);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.details) || 'Failed to start traffic generation. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStop = async () => {\n    setStopping(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      // First stop the traffic processes\n      const stopResponse = await axios.post('/api/traffic-generator/stop', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath\n      });\n\n      // Then cleanup the tail process if we have a PID\n      if (processDetails !== null && processDetails !== void 0 && processDetails.pid) {\n        await axios.post('/api/traffic-generator/cleanup', {\n          pid: processDetails.pid,\n          sshHost: formData.sshHost,\n          sshUsername: formData.sshUsername,\n          sshPassword: formData.sshPassword,\n          sshKeyPath: formData.sshKeyPath\n        });\n      }\n      setSuccess('Traffic processes stopped successfully!');\n      setProcessDetails(null);\n    } catch (err) {\n      setError('Failed to stop traffic processes. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setStopping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      maxWidth: 800,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Traffic Generator Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), connectionStatus && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: connectionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), processDetails && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2,\n        p: 2,\n        bgcolor: 'background.paper',\n        borderRadius: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Process Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), processDetails.stdout && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            margin: 0,\n            whiteSpace: 'pre-wrap'\n          },\n          children: processDetails.stdout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), processDetails.stderr && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          children: \"Errors:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            margin: 0,\n            whiteSpace: 'pre-wrap',\n            color: 'error.main'\n          },\n          children: processDetails.stderr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this), processDetails.processStatus && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"text.secondary\",\n          children: \"Process Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            margin: 0,\n            whiteSpace: 'pre-wrap'\n          },\n          children: processDetails.processStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 3,\n        mb: 2\n      },\n      children: \"SSH Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"SSH Host\",\n          name: \"sshHost\",\n          value: formData.sshHost,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"SSH Username\",\n          name: \"sshUsername\",\n          value: formData.sshUsername,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"SSH Password\",\n          name: \"sshPassword\",\n          type: \"password\",\n          value: formData.sshPassword,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"SSH Key Path (optional)\",\n          name: \"sshKeyPath\",\n          value: formData.sshKeyPath,\n          onChange: handleInputChange,\n          helperText: \"Path to private key file if using key-based authentication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: testConnection,\n      disabled: loading || stopping,\n      sx: {\n        mt: 2\n      },\n      children: \"Test Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 2\n      },\n      children: \"Traffic Generator Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Network Interface\",\n          name: \"interface\",\n          value: formData.interface,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"MOAT Private IP\",\n          name: \"moatPrivateIp\",\n          value: formData.moatPrivateIp,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Private IP\",\n          name: \"privateIp\",\n          value: formData.privateIp,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Node Index\",\n          name: \"nodeIndex\",\n          type: \"number\",\n          value: formData.nodeIndex,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Total Duration (seconds)\",\n          name: \"totalDuration\",\n          type: \"number\",\n          value: formData.totalDuration,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      sx: {\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        disabled: loading || stopping,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 22\n        }, this) : 'Start Traffic Generation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"error\",\n        fullWidth: true,\n        onClick: handleStop,\n        disabled: loading || stopping,\n        children: stopping ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 23\n        }, this) : 'Stop Traffic'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 4\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Log Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 24\n          }, this),\n          onClick: fetchLogFiles,\n          disabled: loading,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: autoRefresh ? 'contained' : 'outlined',\n          onClick: () => setAutoRefresh(!autoRefresh),\n          sx: {\n            ml: 1\n          },\n          children: \"Auto Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            bgcolor: 'background.paper',\n            borderRadius: 1\n          },\n          children: logFiles.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n            secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              onClick: () => handleDeleteLog(file.name),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this),\n            selected: selectedLogFile === file.name,\n            onClick: () => handleLogFileSelect(file.name),\n            sx: {\n              cursor: 'pointer',\n              '&:hover': {\n                bgcolor: 'action.hover'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: file.name,\n              secondary: `${(file.size / 1024).toFixed(2)} KB - ${new Date(file.lastModified).toLocaleString()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)\n          }, file.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            bgcolor: 'background.paper',\n            borderRadius: 1,\n            p: 2,\n            height: '400px',\n            overflow: 'auto'\n          },\n          children: selectedLogFile ? /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              margin: 0,\n              whiteSpace: 'pre-wrap'\n            },\n            children: logContent || 'Loading log content...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            sx: {\n              textAlign: 'center',\n              mt: 2\n            },\n            children: \"Select a log file to view its contents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(TrafficGenerator, \"YGAsiIMin//sEZi76pryF3BpFPY=\");\n_c = TrafficGenerator;\nexport default TrafficGenerator;\nvar _c;\n$RefreshReg$(_c, \"TrafficGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","TextField","Typography","Alert","CircularProgress","Grid","Divider","Stack","List","ListItem","ListItemText","IconButton","axios","RefreshIcon","DeleteIcon","jsxDEV","_jsxDEV","TrafficGenerator","_s","formData","setFormData","sshHost","sshUsername","sshPassword","sshKeyPath","interface","moatPrivateIp","privateIp","nodeIndex","totalDuration","loading","setLoading","stopping","setStopping","error","setError","success","setSuccess","connectionStatus","setConnectionStatus","processDetails","setProcessDetails","logFiles","setLogFiles","selectedLogFile","setSelectedLogFile","logContent","setLogContent","wsConnected","setWsConnected","ws","setWs","autoRefresh","setAutoRefresh","fetchLogFiles","interval","setInterval","clearInterval","close","response","get","data","err","console","handleLogFileSelect","fileName","content","handleDeleteLog","delete","handleInputChange","e","name","value","target","prev","testConnection","post","handleSubmit","preventDefault","details","_err$response","_err$response$data","handleStop","stopResponse","pid","component","onSubmit","sx","maxWidth","mx","children","variant","gutterBottom","_jsxFileName","lineNumber","columnNumber","severity","mb","p","bgcolor","borderRadius","stdout","color","style","margin","whiteSpace","stderr","processStatus","mt","container","spacing","item","xs","sm","fullWidth","label","onChange","required","type","helperText","onClick","disabled","my","direction","size","display","justifyContent","alignItems","startIcon","ml","md","map","file","secondaryAction","edge","selected","cursor","primary","secondary","toFixed","Date","lastModified","toLocaleString","height","overflow","textAlign","_c","$RefreshReg$"],"sources":["/home/borgg/dataprox/src/components/TrafficGenerator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Alert,\n  CircularProgress,\n  Grid,\n  Divider,\n  Stack,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n} from '@mui/material';\nimport axios from 'axios';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\ninterface TrafficGeneratorProps {}\n\ninterface ProcessDetails {\n  stdout: string;\n  stderr: string;\n  processStatus: string;\n  pid: string;\n  processStatusAfter5s: string;\n}\n\ninterface LogFile {\n  name: string;\n  size: number;\n  lastModified: string;\n}\n\nconst TrafficGenerator: React.FC<TrafficGeneratorProps> = () => {\n  const [formData, setFormData] = useState({\n    // SSH Configuration\n    sshHost: '',\n    sshUsername: '',\n    sshPassword: '',\n    sshKeyPath: '',\n    // Traffic Generator Configuration\n    interface: '',\n    moatPrivateIp: '',\n    privateIp: '',\n    nodeIndex: '',\n    totalDuration: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [stopping, setStopping] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  const [connectionStatus, setConnectionStatus] = useState<string | null>(null);\n  const [processDetails, setProcessDetails] = useState<ProcessDetails | null>(null);\n  const [logFiles, setLogFiles] = useState<LogFile[]>([]);\n  const [selectedLogFile, setSelectedLogFile] = useState<string | null>(null);\n  const [logContent, setLogContent] = useState<string>('');\n  const [wsConnected, setWsConnected] = useState(false);\n  const [ws, setWs] = useState<WebSocket | null>(null);\n  const [autoRefresh, setAutoRefresh] = useState(false);\n\n  useEffect(() => {\n    // Fetch log files when component mounts\n    fetchLogFiles();\n\n    // Set up auto-refresh interval\n    const interval = setInterval(() => {\n      if (autoRefresh) {\n        fetchLogFiles();\n      }\n    }, 5000);\n\n    return () => {\n      clearInterval(interval);\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, [autoRefresh]);\n\n  const fetchLogFiles = async () => {\n    try {\n      const response = await axios.get('/api/traffic-generator/logs');\n      setLogFiles(response.data);\n    } catch (err) {\n      console.error('Error fetching log files:', err);\n    }\n  };\n\n  const handleLogFileSelect = async (fileName: string) => {\n    setSelectedLogFile(fileName);\n    setLogContent('');\n\n    // Fetch initial log content\n    try {\n      const response = await axios.get(`/api/logs/${fileName}`);\n      setLogContent(response.data.content);\n    } catch (err) {\n      console.error('Error fetching log content:', err);\n    }\n  };\n\n  const handleDeleteLog = async (fileName: string) => {\n    try {\n      await axios.delete(`/api/traffic-generator/logs/${fileName}`);\n      fetchLogFiles();\n      if (selectedLogFile === fileName) {\n        setSelectedLogFile(null);\n        setLogContent('');\n        if (ws) {\n          ws.close();\n        }\n      }\n    } catch (err) {\n      console.error('Error deleting log file:', err);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const testConnection = async () => {\n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/test-connection', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n      setConnectionStatus('Successfully connected to the traffic generator machine!');\n    } catch (err) {\n      setError('Failed to connect to the traffic generator machine. Please check your SSH credentials.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    setProcessDetails(null);\n\n    try {\n      const response = await axios.post('/api/traffic-generator/run', formData);\n      setSuccess('Traffic generation started successfully!');\n      if (response.data.details) {\n        setProcessDetails(response.data.details);\n      }\n    } catch (err: any) {\n      setError(err.response?.data?.details || 'Failed to start traffic generation. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStop = async () => {\n    setStopping(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // First stop the traffic processes\n      const stopResponse = await axios.post('/api/traffic-generator/stop', {\n        sshHost: formData.sshHost,\n        sshUsername: formData.sshUsername,\n        sshPassword: formData.sshPassword,\n        sshKeyPath: formData.sshKeyPath,\n      });\n\n      // Then cleanup the tail process if we have a PID\n      if (processDetails?.pid) {\n        await axios.post('/api/traffic-generator/cleanup', {\n          pid: processDetails.pid,\n          sshHost: formData.sshHost,\n          sshUsername: formData.sshUsername,\n          sshPassword: formData.sshPassword,\n          sshKeyPath: formData.sshKeyPath,\n        });\n      }\n\n      setSuccess('Traffic processes stopped successfully!');\n      setProcessDetails(null);\n    } catch (err) {\n      setError('Failed to stop traffic processes. Please try again.');\n      console.error('Error:', err);\n    } finally {\n      setStopping(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Traffic Generator Configuration\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {success}\n        </Alert>\n      )}\n\n      {connectionStatus && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          {connectionStatus}\n        </Alert>\n      )}\n\n      {processDetails && (\n        <Box sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Process Details\n          </Typography>\n          {processDetails.stdout && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Output:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.stdout}\n              </pre>\n            </Box>\n          )}\n          {processDetails.stderr && (\n            <Box sx={{ mb: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Errors:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap', color: 'error.main' }}>\n                {processDetails.stderr}\n              </pre>\n            </Box>\n          )}\n          {processDetails.processStatus && (\n            <Box>\n              <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                Process Status:\n              </Typography>\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {processDetails.processStatus}\n              </pre>\n            </Box>\n          )}\n        </Box>\n      )}\n\n      <Typography variant=\"h6\" sx={{ mt: 3, mb: 2 }}>\n        SSH Connection\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Host\"\n            name=\"sshHost\"\n            value={formData.sshHost}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Username\"\n            name=\"sshUsername\"\n            value={formData.sshUsername}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Password\"\n            name=\"sshPassword\"\n            type=\"password\"\n            value={formData.sshPassword}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"SSH Key Path (optional)\"\n            name=\"sshKeyPath\"\n            value={formData.sshKeyPath}\n            onChange={handleInputChange}\n            helperText=\"Path to private key file if using key-based authentication\"\n          />\n        </Grid>\n      </Grid>\n\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={testConnection}\n        disabled={loading || stopping}\n        sx={{ mt: 2 }}\n      >\n        Test Connection\n      </Button>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Typography variant=\"h6\" sx={{ mb: 2 }}>\n        Traffic Generator Settings\n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Network Interface\"\n            name=\"interface\"\n            value={formData.interface}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"MOAT Private IP\"\n            name=\"moatPrivateIp\"\n            value={formData.moatPrivateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Private IP\"\n            name=\"privateIp\"\n            value={formData.privateIp}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Node Index\"\n            name=\"nodeIndex\"\n            type=\"number\"\n            value={formData.nodeIndex}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            label=\"Total Duration (seconds)\"\n            name=\"totalDuration\"\n            type=\"number\"\n            value={formData.totalDuration}\n            onChange={handleInputChange}\n            required\n          />\n        </Grid>\n      </Grid>\n\n      <Stack direction=\"row\" spacing={2} sx={{ mt: 3 }}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          fullWidth\n          disabled={loading || stopping}\n        >\n          {loading ? <CircularProgress size={24} /> : 'Start Traffic Generation'}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          fullWidth\n          onClick={handleStop}\n          disabled={loading || stopping}\n        >\n          {stopping ? <CircularProgress size={24} /> : 'Stop Traffic'}\n        </Button>\n      </Stack>\n\n      <Divider sx={{ my: 4 }} />\n\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n        <Typography variant=\"h6\">\n          Log Files\n        </Typography>\n        <Box>\n          <Button\n            startIcon={<RefreshIcon />}\n            onClick={fetchLogFiles}\n            disabled={loading}\n          >\n            Refresh\n          </Button>\n          <Button\n            variant={autoRefresh ? 'contained' : 'outlined'}\n            onClick={() => setAutoRefresh(!autoRefresh)}\n            sx={{ ml: 1 }}\n          >\n            Auto Refresh\n          </Button>\n        </Box>\n      </Box>\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={4}>\n          <List sx={{ bgcolor: 'background.paper', borderRadius: 1 }}>\n            {logFiles.map((file) => (\n              <ListItem\n                key={file.name}\n                secondaryAction={\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"delete\"\n                    onClick={() => handleDeleteLog(file.name)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                }\n                selected={selectedLogFile === file.name}\n                onClick={() => handleLogFileSelect(file.name)}\n                sx={{\n                  cursor: 'pointer',\n                  '&:hover': {\n                    bgcolor: 'action.hover',\n                  },\n                }}\n              >\n                <ListItemText\n                  primary={file.name}\n                  secondary={`${(file.size / 1024).toFixed(2)} KB - ${new Date(file.lastModified).toLocaleString()}`}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Box\n            sx={{\n              bgcolor: 'background.paper',\n              borderRadius: 1,\n              p: 2,\n              height: '400px',\n              overflow: 'auto',\n            }}\n          >\n            {selectedLogFile ? (\n              <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\n                {logContent || 'Loading log content...'}\n              </pre>\n            ) : (\n              <Typography color=\"text.secondary\" sx={{ textAlign: 'center', mt: 2 }}>\n                Select a log file to view its contents\n              </Typography>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TrafficGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}